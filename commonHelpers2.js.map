{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst inputReff = document.querySelector('#datetime-picker')\nconst startReffBtn = document.querySelector('[data-start]')\nconst daysReff = document.querySelector('[data-days]')\nconst hoursReff = document.querySelector('[data-hours]')\nconst minutesReff = document.querySelector('[data-minutes]')\nconst secondsReff = document.querySelector('[data-seconds]')\n\nstartReffBtn.disabled = true\n\nlet currentDate = new Date()\nlet selectedDate = null\n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    // console.log(selectedDates[0]);\n    if (selectedDates[0].getTime() < currentDate.getTime()) {\n      alert('Please choose a date in the future')\n      startReffBtn.disabled = true\n      return\n    }\n    selectedDate = selectedDates[0]\n    startReffBtn.disabled = false\n  },\n};\n\nflatpickr(inputReff, options)\n\nstartReffBtn.addEventListener('click', () => {\n  const intervalId = setInterval(() => {\n    let currentDateIn = new Date()\n    if (selectedDate.getTime() >= currentDateIn.getTime()) {\n      daysReff.textContent = addLeadingZero(convertMs(selectedDate.getTime() - currentDateIn.getTime()).days)\n      hoursReff.textContent = addLeadingZero(convertMs(selectedDate.getTime() - currentDateIn.getTime()).hours)\n      minutesReff.textContent = addLeadingZero(convertMs(selectedDate.getTime() - currentDateIn.getTime()).minutes)\n      secondsReff.textContent = addLeadingZero(convertMs(selectedDate.getTime() - currentDateIn.getTime()).seconds)\n    } else {\n      clearInterval(intervalId)\n      daysReff.textContent = '00'\n      hoursReff.textContent = '00'\n      minutesReff.textContent = '00'\n      secondsReff.textContent = '00'\n    }\n  }, 1000)\n})\n\nfunction addLeadingZero(value) {\n  return value < 9 ? `0${value}` : value\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["inputReff","startReffBtn","daysReff","hoursReff","minutesReff","secondsReff","currentDate","selectedDate","options","selectedDates","flatpickr","intervalId","currentDateIn","addLeadingZero","convertMs","value","ms","days","hours","minutes","seconds"],"mappings":"wIAGA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DJ,EAAa,SAAW,GAExB,IAAIK,EAAc,IAAI,KAClBC,EAAe,KAGnB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAErB,GAAIA,EAAc,GAAG,QAAO,EAAKH,EAAY,UAAW,CACtD,MAAM,oCAAoC,EAC1CL,EAAa,SAAW,GACxB,MACD,CACDM,EAAeE,EAAc,GAC7BR,EAAa,SAAW,EACzB,CACH,EAEAS,EAAUV,EAAWQ,CAAO,EAE5BP,EAAa,iBAAiB,QAAS,IAAM,CAC3C,MAAMU,EAAa,YAAY,IAAM,CACnC,IAAIC,EAAgB,IAAI,KACpBL,EAAa,QAAO,GAAMK,EAAc,QAAO,GACjDV,EAAS,YAAcW,EAAeC,EAAUP,EAAa,QAAS,EAAGK,EAAc,SAAS,EAAE,IAAI,EACtGT,EAAU,YAAcU,EAAeC,EAAUP,EAAa,QAAS,EAAGK,EAAc,SAAS,EAAE,KAAK,EACxGR,EAAY,YAAcS,EAAeC,EAAUP,EAAa,QAAS,EAAGK,EAAc,SAAS,EAAE,OAAO,EAC5GP,EAAY,YAAcQ,EAAeC,EAAUP,EAAa,QAAS,EAAGK,EAAc,SAAS,EAAE,OAAO,IAE5G,cAAcD,CAAU,EACxBT,EAAS,YAAc,KACvBC,EAAU,YAAc,KACxBC,EAAY,YAAc,KAC1BC,EAAY,YAAc,KAE7B,EAAE,GAAI,CACT,CAAC,EAED,SAASQ,EAAeE,EAAO,CAC7B,OAAOA,EAAQ,EAAI,IAAIA,IAAUA,CACnC,CAEA,SAASD,EAAUE,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}